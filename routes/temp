// routes/auth.js
const express = require('express');
const bcrypt = require('bcryptjs');
const passport = require('passport');  // Import Passport
const User = require('../models/User');
const router = express.Router();

// Render signup page
router.get('/signup', (req, res) => {
    res.render('signup');
});

// Handle signup logic
router.post('/signup', async (req, res) => {
    const { name, email, username, password, password2, role } = req.body;

    // Check if passwords match
    if (password !== password2) {
        req.flash('error_msg', 'Passwords do not match');
        return res.redirect('/auth/signup');
    }

    // Check if username is already taken
    const existingUser = await User.findOne({ username: username });
    if (existingUser) {
        req.flash('error_msg', 'Username not available');
        return res.redirect('/auth/signup');
    }

    // Create new user with hashed password
    const hashedPassword = await bcrypt.hash(password, 10);
    const newUser = new User({
        name,
        email,
        username,
        password: hashedPassword,
        role
    });

    await newUser.save();
    req.flash('success_msg', 'You are now registered and can log in');
    res.redirect('/auth/login');
});

// Render login page
router.get('/login', (req, res) => {
    res.render('login');
});

// Handle login logic using Passport.js
router.post('/login', (req, res, next) => {
    passport.authenticate('local', {
        successRedirect: '/dashboard',  // Default redirect after successful login
        failureRedirect: '/auth/login', // Redirect back to login on failure
        failureFlash: true              // Enable flash messages for login failure
    })(req, res, next);
});

// Logout route
router.get('/logout', (req, res, next) => {
    req.logout((err) => {
        if (err) return next(err); // Handle any logout errors
        req.flash('success_msg', 'You are logged out');
        res.redirect('/auth/login');
    });
});

module.exports = router;

